name: Build and package

on:
  push:
    tags:
      - "*.*.*"
  #manual trigger
  workflow_dispatch:

jobs:
  docker-image:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - context: ./findimagedupes
            image: ghcr.io/${{ github.repository }}-findimagedupes
            title: ${{ github.event.repository.name }}-findimagedupes
          - context: ./grouper
            image: ghcr.io/${{ github.repository }}-grouper
            title: ${{ github.event.repository.name }}-grouper
          - context: .
            image: ghcr.io/${{ github.repository }}-browser
            title: ${{ github.event.repository.name }}-browser

    permissions:
      packages: write
      contents: read

    steps:
      # pull code
      - name: Check Out Repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: $
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata from build
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          # Generate Docker tags based on the following events/attributes.
          # https://github.com/docker/metadata-action#tags-input
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
          labels: |
            org.opencontainers.image.title=${{ matrix.title }}


      - name: Set Docker Tag
        id: set-tag
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "::set-output name=docker_tag::testing"
          else
            echo "::set-output name=docker_tag::${{ steps.meta.outputs.tags }}"
          fi

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ matrix.image }}:${{ steps.set-tag.outputs.docker_tag }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
